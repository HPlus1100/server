name: Deploy to Amazon ECS # workflow 명

on: # 언제 실행되는지 정의
  push:
    branches:
      - release-alpha

jobs: # 하나의 처리 단위 적어도 하나의 작업 필요, 기본적으로 동시에 실행
  deploy: # job 명
    name: Deploy
    runs-on: ubuntu-latest # 실행환경 지정 ubuntu-latest
    environment: alpha

    steps: # 작업 단계 : 커맨드나 스크립트 : run , 액션 uses 속성 사용
      - name: Checkout
        uses: actions/checkout@v3 # 리포지토리 checkout

      - name: Configure AWS credentials # AWS 보안 자격 인증 - IAM에서 설정한 엑세스키 적용
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR # AWS 로그인
        id: login-ecr # ID로 작업 세부내용간 맵핑 가능
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }} # login-ecr 의 결과물의 registry
          ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: setting-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task_definition.json
          container-name: 1100server
          image: ${{ steps.build-image.outputs.image }}
          environment-variables: |
            CLOUDWATCH_GROUP_NAME=server-logs
            CLOUDWATCH_STREAM_NAME=server-logs-production
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ vars.AWS_REGION }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_DATABASE=${{ secrets.DB_DATABASE }}
            DB_PORT=${{ secrets.DB_PORT }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.setting-task-definition.outputs.task-definition }}
          service: ${{ vars.ECS_SERVICE }}
          cluster: ${{ vars.ECS_CLUSTER }}
          wait-for-service-stability: false
